// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddGuild extends ethereum.Event {
  get params(): AddGuild__Params {
    return new AddGuild__Params(this);
  }
}

export class AddGuild__Params {
  _event: AddGuild;

  constructor(event: AddGuild) {
    this._event = event;
  }

  get guildAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RemoveGuild extends ethereum.Event {
  get params(): RemoveGuild__Params {
    return new RemoveGuild__Params(this);
  }
}

export class RemoveGuild__Params {
  _event: RemoveGuild;

  constructor(event: RemoveGuild) {
    this._event = event;
  }

  get guildAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class GuildRegistry extends ethereum.SmartContract {
  static bind(address: Address): GuildRegistry {
    return new GuildRegistry("GuildRegistry", address);
  }

  getGuildsAddresses(): Array<Address> {
    let result = super.call(
      "getGuildsAddresses",
      "getGuildsAddresses():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getGuildsAddresses(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getGuildsAddresses",
      "getGuildsAddresses():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  guilds(param0: BigInt): Address {
    let result = super.call("guilds", "guilds(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_guilds(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("guilds", "guilds(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  index(): BigInt {
    let result = super.call("index", "index():(uint256)", []);

    return result[0].toBigInt();
  }

  try_index(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("index", "index():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AddGuildCall extends ethereum.Call {
  get inputs(): AddGuildCall__Inputs {
    return new AddGuildCall__Inputs(this);
  }

  get outputs(): AddGuildCall__Outputs {
    return new AddGuildCall__Outputs(this);
  }
}

export class AddGuildCall__Inputs {
  _call: AddGuildCall;

  constructor(call: AddGuildCall) {
    this._call = call;
  }

  get guildAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddGuildCall__Outputs {
  _call: AddGuildCall;

  constructor(call: AddGuildCall) {
    this._call = call;
  }
}

export class RemoveGuildCall extends ethereum.Call {
  get inputs(): RemoveGuildCall__Inputs {
    return new RemoveGuildCall__Inputs(this);
  }

  get outputs(): RemoveGuildCall__Outputs {
    return new RemoveGuildCall__Outputs(this);
  }
}

export class RemoveGuildCall__Inputs {
  _call: RemoveGuildCall;

  constructor(call: RemoveGuildCall) {
    this._call = call;
  }

  get guildAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveGuildCall__Outputs {
  _call: RemoveGuildCall;

  constructor(call: RemoveGuildCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
